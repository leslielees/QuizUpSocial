swagger: "2.0"
info:
  version: 1.0.0
  title: QuizUp Social API
  license:
    name: MIT
host: social.quizup.swagger.io
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /players:
    get:
      summary: List all players
      operationId: listPlayers
      tags:
        - players
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of players
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Players'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /players/{playerId}:
    get:
      summary: Info for a specific player
      operationId: showPlayerById
      tags:
        - players
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Players'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /topics:
    get:
      summary: List all topics
      operationId: listTopics
      tags:
        - topics
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of topics
          headers:
            x-next:
              type: string
              description: A link to the next page of responses
          schema:
            $ref: '#/definitions/Topics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /topics/{topicId}:
    get:
      summary: Info for a specific topic
      operationId: showTopicById
      tags:
        - topics
      parameters:
        - name: topicId
          in: path
          required: true
          description: The id of the topic to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Topics'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  /topics/{topicId}/posts/{postId}:
    get:
      summary: Show the particular post for a specific topic
      operationId: showPostById
      tags:
        - posts
      parameters:
        - name: topicId
          in: path
          required: true
          description: The id of the topic to retrieve
          type: string
        - name: postId
          in: path
          required: true
          description: The id of the post to retrieve
          type: string
      responses:
        "200":
          description: Expected response to a valid request
          schema:
            $ref: '#/definitions/Post'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Player:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Players:
    type: array
    items:
      $ref: '#/definitions/Player'
  Topic:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      popularity:
        type: integer
        format: int32
      tag:
        type: string
  Topics:
    type: array
    items:
      $ref: '#/definitions/Topic'
  Post:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      message:
        type: string
      tag:
        type: string
  Posts:
    type: array
    items:
      $ref: '#/definitions/Post'
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string